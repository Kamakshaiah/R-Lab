shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
x <- abs(round(rnorm(10)*100, 0))
y <- abs(round(rnorm(10)*100, 0))
lm(y ~ x, data = cbind.data.frame(x, y))
fit <- lm(y ~ x, data = cbind.data.frame(x, y))
fit$fitted.values
sigma_square <- sum((fit$fitted.values - y)^2)/(length(y)-2)
sigma_square
se_beta <- sigma_square/sum((x - mean(x))^2)
se_beta
beta
fit_beta <- cov(x, y)/var(x)
fit_beta
fit_alpha <- (mean(y) - (fit_beta*mean(x)))
fit_alpha
summary(fit)
fit_rse <- sqrt(sum((y - fit$fitted.values)^2)/(length(x)-1)
)
fit_rse <- sqrt(sum((y - fit$fitted.values)^2)/(length(x)-1))
fit_rse
fit_rse <- sqrt(sum((y - fit$fitted.values)^2)/(length(x)-2))
fit_rse
names(fit)
fit_ssr <- sum((fit$fitted.values - mean(y))^2)
fit_sst <- sum((y - mean(y))^2)
fit_ssr/fit_sst
(fit_ssr/n-2)/(fit_sst/n-1)
(fit_ssr/length(x)-2)/(fit_sst/length(x)-1)
1- (fit_ssr/length(x)-2)/(fit_sst/length(x)-1)
fit_rsq <- fit_ssr/fit_sst
fit_rsq <- fit_ssr/fit_sst
adj_rsq <- 1- (1-fit_rsq)*((length(x)-1)/(length(x)-2))
adj_rsq
f_stat <- (fit_ssr/((fit_sst-fit_ssr)/(length(x)-2)))
f_stat
help("fp")
pf(f_stat, 1, 9)
1-pf(f_stat, 1, 9)
pf(f_stat, 1, 9, lower.tail = FLSE)
pf(f_stat, 1, 9, lower.tail = FALSE)
help("lm")
gen <- sample(c("male", "female"), 10, replace = TRUE)
gen
lm(y ~ gen + x, data = cbind.data.frame(x, y, gen))
table(gen)
lm(y ~ gen*x, data = cbind.data.frame(x, y, gen))
lm(y ~ gen + x + gen:x, data = cbind.data.frame(x, y, gen))
lm(y ~ x + gen:x, data = cbind.data.frame(x, y, gen))
lm(y ~ x + gen:y, data = cbind.data.frame(x, y, gen))
install.packages("Rbitcoin")
library(Rbitcoin)
wait <- antiddos(market = 'kraken', antispam_interval = 5, verbose = 1)
wait
market.api.process('kraken',c('BTC','EUR'),'ticker')
file.edit('~/.Renviron')
wait
wait <- antiddos(market = 'kraken', antispam_interval = 5, verbose = 1)
market.api.process('kraken',c('BTC','EUR'),'ticker')
q()
