gender <- sample(c('male', 'female'), 10, replace=T)
gender
is.vector(gender)
is.factor(gender)
x <- 1:10
x
summary(x)
summary(gender)
gender
is.vector(gender)
is.factor(gender)
gender <- as.factor(gender)
is.factor(gender)
summary(gender)
yorn_data <- sample(c('yes', 'no'), 10, replace=T)
yorn_data
responses <- sample(c('yes', 'no'), 10, replace=T)
is.vector(responses)
is.factor(responses)
responses <- factor(responses)
responses
summary(responses)
x <- 1:5
typeof(x)
class(x)
is.double(x)
is.integer(x)
mode(x)
y <- TRUE
typeof(y)
class(y)
mode(y)
a <- 2L
is.integer(a)
is.double(a)
a <- "musunuru"
b <- 1:3
b
c <- sample(c('y', 'n'), 10, replace=T)
a
b
c
list_obj <- list(a, b, c)
list_obj
is.vector(c)
c <- factor(c)
c
list_obj <- list(a, b, c)
list_obj
x <- 1:10
x
x[1]
for (i in x){print(i)}
x[c(3, 6)]
x[5:10]
matrix_obj <- matrix(1:16, 4, 4)
matrix_obj
data.frame(matrix_obj)
matrix_obj[1, 2]
matrix_obj[4, 4]
df_obj <- data.frame(matrix_obj)
class(df_obj)
typeof(df_obj)
df_obj[1, ]
df_obj[, 1]
df_obj[3, 3]
df_obj[1:3, 3]
df_obj[c(1,3), 3]
df_obj$X1
df_obj$X2
colnames(df_obj) <- c('v1', 'v2', 'v3')
df_obj
colnames(df_obj) <- c('v1', 'v2', 'v3', 'v4')
names(df_obj)
df_obj$v1
df_obj$v2
df_obj$v3
df_obj$v4
list_obj
list_obj[[1]]
list_obj[[2]]
list_obj[[3]]
my_list <- list()
my_list[1] <- 'musunuru'
my_list[2] <- 1:5
my_list
my_list[[1]] <- 'musunuru'
my_list[[2]] <- 1:5
my_list[[3]] <- sample(c('educated', 'uneducated'), 10, replace=T)
my_list
data(airquality)
View(airquality)
typeof(airquality)
class(airquality)
names(airquality)
rownames(airquality)
airquality$Ozone
length(NA)
length(NULL)
mean(airquality$Ozone)
mean(airquality$Ozone, na.rm=T)
q()
help('if')
vec_obj <- 1:10
vec1_obj <- 1:3
vec_obj %in% vec1_obj
vec_obj
vec_obj
vec1_obj
vec_obj %in% vec1_obj
interaction(vec_obj, vec1_obj)
intersect(vec_obj, vec1_obj)
if (1 %in% vec_obj) print('there is one in', vec_obj)
if (1 %in% vec_obj) print('there is one in vector')
x <- c('one'. 'two', 'three')
x <- c('one', 'two', 'three')
print(x)
if ('three' %in% x) print('the element was found')
a <- 1; b <- 2
print(c(a, b))
print(c(a, b))
if (a > b) {
cat(a, 'is greater than', b)
} else {
cat(b, 'is greater than', a)
}
a <- 2; b <- 1
print(c(a, b))
if (a > b) {
cat(a, 'is greater than', b)
} else {
cat(b, 'is greater than', a)
}
if (a > b) {
cat(a, 'is greater than', b)
} else if (b > a)  {
cat(b, 'is greater than', a)
}
a <- 1; b <- 2
if (a > b) {
cat(a, 'is greater than', b)
} else if (b > a)  {
cat(b, 'is greater than', a)
}
if (a > b) {
cat(a, 'is greater than', b)
} else {
cat(b, 'is greater than', a)
}
c <- 3
if ( a>b ) {
cat(a, 'is big')
} else if (b >c){
cat(b, 'is bit')
} else {
cat(c, 'is big')
}
a <- 3; b <- 2
c <- 1
if ( a>b ) {
cat(a, 'is big')
} else if (b >c){
cat(b, 'is bit')
} else {
cat(c, 'is big')
}
if ( a>b ) {
cat('a is big')
} else if (b >c){
cat('b is bit')
} else {
cat('c is big')
}
findingBigNumber <- function(a, b, c){
if ( a>b ) {
cat('a is big')
} else if (b >c){
cat('b is bit')
} else {
cat('c is big')
}
}
findingBigNumber(1, 2, 3)
findingBigNumber(3, 2, 1)
grades <- round(runif(10), )
grades
grades <- round(runif(40, 90, 10), )
runif(1)
grades <- round(runif(10)*100, )
grades
if (marks < 40){
print('failed')
} else if(marks >= 40 & marks < 60){
print('second class')
} else {
print('first class')
}
marks <- round(runif(10)*100, )
if (marks < 40){
print('failed')
} else if(marks >= 40 & marks < 60){
print('second class')
} else {
print('first class')
}
for (i in marks){
if (i < 40){
print('failed')
} else if(i >= 40 & marks < 60){
print('second class')
} else {
print('first class')
}
}
for (i in marks){
if (i < 40){
print('failed')
} else if(i >= 40 & i < 60){
print('second class')
} else {
print('first class')
}
}
purchase_info <- round(runif(10)*100, )
employee_perf <- c('poor', 'fair', 'excellent')
employee_perf <- c('poor', 'fair', 'excellent')
for (i in purchase_info){
if (i == 'poor' ){
print('fire')
} else if(i == 'fair'){
print('eligible for 1 % on basic incentives')
} else {
print('eligible for 5 % on basic incentives')
}
}
marks <- round(runif(10)*100, )
marks
for (m in marks){
if (m < 40){
print('failed')
} else if(m >= 40 & m < 60){
print('second class')
} else {
print('first class')
}
}
marks <- c(12, 34, 54, 67, 79, 90)
for (m in marks){
if (m < 40){
print('failed')
} else if(m >= 40 & m < 60){
print('second class')
} else {
print('first class')
}
}
purchase_info <- round(runif(10)*100, )
purchase_info
for (i in purchase_info){
if (i < 40){
print('eligible for 1 credit point')
} else if(i >= 40 & i < 60){
print('eligible for 10 credit point')
} else {
print('eligible for 15 credit point')
}
}
employee_perf <- c('poor', 'fair', 'excellent')
for (i in employee_perf){
if (i == 'poor' ){
print('fire')
} else if(i == 'fair'){
print('eligible for 1 % on basic incentives')
} else {
print('eligible for 5 % on basic incentives')
}
}
employee_perf <- sample(c('poor', 'fair', 'excellent'), 10, replace = T)
employee_perf
length(employee_perf)
for (i in employee_perf){
if (i == 'poor' ){
print('fire')
} else if(i == 'fair'){
print('eligible for 1 % on basic incentives')
} else {
print('eligible for 5 % on basic incentives')
}
}
runif()
runif(1)
runif(1)*100
round(runif(1)*100)
round(runif(10)*100)
round(runif(100)*100)
round(rnorm(100)*100)
help('subset')
x <- 1:10
x[1:2]
x[c(1, 3)]
lst <- list(a=1:10, b=letters[1:10])
lst
lst[[1]]
lst[[2]]
mat_obj <- matrix(1:6, 4, 4)
mat_obj <- matrix(1:16, 4, 4)
mat_obj[1:2, 1:2]
mat_obj
mat_obj
mat_obj[1:2, 1:2]
mat_obj[1, 1]
lst
df_obj <- data.frame(lst)
df_obj
df_obj$a
df_obj$b
df_obj[1, ]
df_obj[1:2, ]
?subset
ls('package:datasets')
data("airquality")
detach("package:datasets", unload = TRUE)
data("airquality")
library(datasets, lib.loc = "C:/Program Files/R/R-4.0.3/library")
detach("package:datasets", unload = TRUE)
library('datasets')
detach("package:datasets")
library("datasets")
detach("datasets")
detach("package:datasets", unload = TRUE)
sessionInfo()
?subset
library('datasets')
data('airquality')
names(airquality)
head(airquality)
subset(airquality, Temp > 80, select = c(Ozone, Temp))
subset(airquality, Temp = 50, select = c(Ozone, Temp))
subset(airquality, Temp < 50, select = c(Ozone, Temp))
subset(airquality, Temp < 80, select = c(Ozone, Temp))
names(airquality)
head(airquality)
airquality$Day
subset(airquality, Day == 1, select = -tempdir())
subset(airquality, Day == 1, select = -Temp)
names(airquality)
day_1_air_quality <- subset(airquality, Day == 1, select = -Temp)
day_1_air_quality
typeof(day_1_air_quality)
class(day_1_air_quality)
mode(day_1_air_quality)
day_2_air_quality <- subset(airquality, Day == 2, select = -Temp)
ls()
day_2_air_quality
cor(day_1_air_quality$Wind, day_2_air_quality$Wind)
?apply
head(airquality)
apply(airquality, 2, mean)
apply(airquality, 1, mean)
dim(airquality)
apply(airquality, 2, sd)
mean(airquality$Ozone, na.rm = T)
data('cars')
head(cars)
data('iris')
head(iris)
summary(iris)
?tapply
tapply(iris$Petal.Length, iris$Species, mean)
tapply(iris$Species, iris$Petal.Length, mean)
df_obj <- data.frame(a <- 1:10, b <- letters[1:10])
df_obj
df_obj <- data.frame(a = 1:10, b = letters[1:10])
df_obj
names(df_obj)
c <- LETTERS[1:10]
c
cbind(df_obj, c)
df_obj
df_2 <- cbind(df_obj, c)
df_obj
df_2
length(df_obj)
dim(df_obj)
tail(df_obj)
rbind(df_obj, c(11, h))
rbind(df_obj, c(11, 'h'))
ls()
c
df_obj
c
df_obj$c <- c
df_obj
df_2
df_obj
df_obj
df_obj[11, ]
df_obj[10, ]
df_obj[11, ] <- c(11, 'h', 'H')
df_obj
history(n=10)
history()
savehistory("E:/MK/R/scripts/split-apply-combine.Rhistory")
